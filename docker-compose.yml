services:
  frontend:
    build: ./front
    container_name: frontend
    expose:
      - "3000"
    networks:
      - app-network

  backend:
    build: ./back
    container_name: backend
    env_file:
      - ./back/.env
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
    networks:
      - app-network

  migrate:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./back:/app
    env_file:
    - ./back/.env
    depends_on:
      - postgres
    command: >
      sh -c "npm install &&
            npx prisma generate &&
            npx prisma migrate deploy"
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
