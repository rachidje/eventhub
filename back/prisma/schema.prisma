// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DayOfWeek {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}

enum EventStatus {
  scheduled
  cancelled
  published
}

model Slot {
  id          String   @id @default(uuid())
  calendarId  String
  calendar    Calendar @relation(fields: [calendarId], references: [id])
  date        DateTime @db.Date
  startTime   DateTime @db.Time
  endTime     DateTime @db.Time
  isBooked    Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([calendarId, date, startTime, endTime])
  @@unique([calendarId, date, startTime, endTime])
}

model Calendar {
  id          String   @id @default(uuid())
  venueId     String   @unique
  venue       Venue    @relation(fields: [venueId], references: [id])

  slots       Slot[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Venue {
  id             String   @id @default(uuid())
  name           String
  street         String
  postalCode     String
  city           String
  country        String
  weeklySchedule Json
  calendar       Calendar?
}

enum Role {
  admin
  organizer
  participant
}

model User {
  id          String   @id @default(uuid())
  firstname   String
  lastname    String
  email       String   @unique
  password    String
  role        Role @default(participant)

  hostedEvents HostedEvent[] @relation(name: "UserHostedEvents")

  createdAt DateTime @default(now())
}

model HostedEvent {
  id          String      @id @default(uuid())
  name        String
  description String
  organizerId String      @map("userId")
  status      EventStatus @default(scheduled)
  startDate   DateTime
  endDate     DateTime
  venueId     String
  capacity    Int
  price       Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizer   User     @relation("UserHostedEvents", fields: [organizerId], references: [id])

  @@index([venueId, startDate, endDate])
}
